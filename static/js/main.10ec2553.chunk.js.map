{"version":3,"sources":["pages/ErrorPage.js","pages/Ep1_counters.js","pages/Ep2_draggable.js","App.js","reportWebVitals.js","index.js"],"names":["ErrorPage","CountClick","React","Component","render","count","handleClick","this","props","onClick","HoverCount","handleMouseOver","onMouseOver","Counter","constructor","super","incrementCount","setState","prevState","state","Counters","Main","getDraggableElement","bind","componentDidMount","draggables","document","querySelectorAll","containers","forEach","draggable","addEventListener","classList","add","remove","container","e","preventDefault","aftertElement","clientY","querySelector","append","insertBefore","y","reduce","closet","child","box","getBoundingClientRect","offset","top","height","element","Number","NEGATIVE_INFINITY","className","PageList","linkList","title","path","map","page","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.10ec2553.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ErrorPage() {\n  return (\n    <h1>Error Page</h1>\n  )\n}\n\nexport default ErrorPage","import React from 'react'\n\nclass CountClick extends React.Component {\n  render() {\n    const { count, handleClick } = this.props\n    return (\n      <h2 onClick={handleClick}>Click {count} times</h2>\n    )\n  }\n}\n\nclass HoverCount extends React.Component {\n  render() {\n    const { count, handleMouseOver } = this.props\n    return (\n      <h2 onMouseOver={handleMouseOver}>MouseOver {count} times</h2>\n    )\n  }\n}\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      count: 0\n    }\n  }\n\n  incrementCount = () => {\n    this.setState(prevState => {\n      return {\n        count: prevState.count + 1\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.render(this.state.count, this.incrementCount)}\n      </div>        \n    )\n  }\n}\n\nfunction Counters() {\n  return (\n    <div>\n      <h1>click counter</h1>\n      <Counter render={(count, incrementCount) => (\n        <CountClick count={count} handleClick={incrementCount} />\n      )} />\n      <hr />\n      <h1>hover counter</h1>\n      <Counter render={(count, incrementCount) => (\n        <HoverCount count={count} handleMouseOver={incrementCount} />\n      )} />\n      <hr />\n    </div>\n  )\n}\n\nexport default Counters","import React from \"react\";\nimport './Ep2_draggable.css'\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props)\n    this.getDraggableElement = this.getDraggableElement.bind(this)\n  }\n\n  componentDidMount() {\n    const draggables = document.querySelectorAll('.draggable')\n    const containers = document.querySelectorAll('.container')\n    \n    draggables.forEach(draggable => {\n      draggable.addEventListener('dragstart', () => {\n        draggable.classList.add('dragging')\n      })\n\n      draggable.addEventListener('dragend', () => {\n        draggable.classList.remove('dragging')\n      })\n    })\n\n    containers.forEach(container => {\n      container.addEventListener('dragover', e => {\n        e.preventDefault() // change cursor\n        const aftertElement = this.getDraggableElement(container, e.clientY) // e.clientY: mouse position\n        const draggable = document.querySelector('.dragging')\n        if (aftertElement == null) {\n          container.append(draggable)\n        } else {\n          container.insertBefore(draggable, aftertElement)\n        }\n      })\n    })\n  }\n\n  getDraggableElement(container, y) {\n    const draggableElement = [...container.querySelectorAll('.draggable:not(.dragging)')]\n\n    return draggableElement.reduce((closet, child) => {\n      const box = child.getBoundingClientRect() // .draggable:not(.dragging) inside mouseover\n      const offset = y - box.top - box.height / 2 // distance between the center of our box ans mouse\n\n      if (offset < 0 && offset > closet.offset) {\n        return {\n          offset: offset,\n          element: child\n        }\n      } else {\n        return closet\n      }\n    }, { offset: Number.NEGATIVE_INFINITY }).element\n  }\n\n  render() {\n    return (\n      <main>\n        <div className=\"container\">\n          <p className=\"draggable\" draggable=\"true\">1</p>\n          <p className=\"draggable\" draggable=\"true\">2</p>\n        </div>\n        <div className=\"container\">\n          <p className=\"draggable\" draggable=\"true\">3</p>\n          <p className=\"draggable\" draggable=\"true\">4</p>\n        </div>\n      </main>\n    )\n  }\n}\n\nexport default Main","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n} from 'react-router-dom'\nimport ErrorPage from './pages/ErrorPage'\nimport Ep1Counters from './pages/Ep1_counters'\nimport Ep2Draggable from './pages/Ep2_draggable'\n\nfunction PageList() {\n  const pageList = [\n    {\n      title: 'Ep1_Counter',\n      path: 'ep1_counter'\n    },\n    {\n      title: 'Ep2_Draggable',\n      path: 'ep2_draggable'\n    }\n  ]\n  const linkList = pageList.map((page) => (\n    <Link key={page.path} to={page.path}>{page.title}</Link>\n  ))\n  return (\n    <div>\n      {linkList}\n    </div>\n  ) \n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Link to=\"/\">Home</Link>\n        <Routes>\n          <Route path=\"/\" element={<PageList />} />\n          <Route path=\"/ep1_counter\" element={<Ep1Counters />} />\n          <Route path=\"/ep2_draggable\" element={<Ep2Draggable />} />\n          <Route path=\"*\" element={<ErrorPage />} />\n        </Routes>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}