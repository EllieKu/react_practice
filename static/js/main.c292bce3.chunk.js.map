{"version":3,"sources":["components/Ep1_Counters.js","components/ErrorPage.js","App.js","reportWebVitals.js","index.js"],"names":["CountClick","this","props","count","handleClick","onClick","React","Component","HoverCount","handleMouseOver","onMouseOver","Counter","incrementCount","setState","prevState","state","render","Counters","ErrorPage","PageList","linkList","title","path","map","page","to","App","className","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"4OAEMA,E,4JACJ,WAAU,IAAD,EACwBC,KAAKC,MAA5BC,EADD,EACCA,MAAOC,EADR,EACQA,YACf,OACE,qBAAIC,QAASD,EAAb,mBAAiCD,EAAjC,gB,GAJmBG,IAAMC,WASzBC,E,4JACJ,WAAU,IAAD,EAC4BP,KAAKC,MAAhCC,EADD,EACCA,MAAOM,EADR,EACQA,gBACf,OACE,qBAAIC,YAAaD,EAAjB,uBAA6CN,EAA7C,gB,GAJmBG,IAAMC,WASzBI,E,kDACJ,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IAMRU,eAAiB,WACf,EAAKC,UAAS,SAAAC,GACZ,MAAO,CACLX,MAAOW,EAAUX,MAAQ,OAR7B,EAAKY,MAAQ,CACXZ,MAAO,GAHQ,E,0CAenB,WACE,OACE,8BACGF,KAAKC,MAAMc,OAAOf,KAAKc,MAAMZ,MAAOF,KAAKW,sB,GAnB5BN,IAAMC,WA0CbU,MAjBf,WACE,OACE,gCACE,+CACA,cAAC,EAAD,CAASD,OAAQ,SAACb,EAAOS,GAAR,OACf,cAAC,EAAD,CAAYT,MAAOA,EAAOC,YAAaQ,OAEzC,uBACA,+CACA,cAAC,EAAD,CAASI,OAAQ,SAACb,EAAOS,GAAR,OACf,cAAC,EAAD,CAAYT,MAAOA,EAAOM,gBAAiBG,OAE7C,2BCjDSM,MANf,WACE,OACE,6CCMJ,SAASC,IACP,IAMMC,EANW,CACf,CACEC,MAAO,cACPC,KAAM,QAGgBC,KAAI,SAACC,GAAD,OAC5B,cAAC,IAAD,CAAMC,GAAID,EAAKF,KAAf,SAAsBE,EAAKH,WAE7B,OACE,8BACGD,IAoBQM,MAff,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMF,GAAG,IAAT,kBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOH,KAAK,IAAIM,QAAS,cAACT,EAAD,MACzB,cAAC,IAAD,CAAOG,KAAK,OAAOM,QAAS,cAAC,EAAD,MAC5B,cAAC,IAAD,CAAON,KAAK,IAAIM,QAAS,cAAC,EAAD,eCvBpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAStB,OACP,cAAC,IAAMuB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c292bce3.chunk.js","sourcesContent":["import React from 'react'\n\nclass CountClick extends React.Component {\n  render() {\n    const { count, handleClick } = this.props\n    return (\n      <h2 onClick={handleClick}>Click {count} times</h2>\n    )\n  }\n}\n\nclass HoverCount extends React.Component {\n  render() {\n    const { count, handleMouseOver } = this.props\n    return (\n      <h2 onMouseOver={handleMouseOver}>MouseOver {count} times</h2>\n    )\n  }\n}\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      count: 0\n    }\n  }\n\n  incrementCount = () => {\n    this.setState(prevState => {\n      return {\n        count: prevState.count + 1\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.render(this.state.count, this.incrementCount)}\n      </div>        \n    )\n  }\n}\n\nfunction Counters() {\n  return (\n    <div>\n      <h1>click counter</h1>\n      <Counter render={(count, incrementCount) => (\n        <CountClick count={count} handleClick={incrementCount} />\n      )} />\n      <hr />\n      <h1>hover counter</h1>\n      <Counter render={(count, incrementCount) => (\n        <HoverCount count={count} handleMouseOver={incrementCount} />\n      )} />\n      <hr />\n    </div>\n  )\n}\n\nexport default Counters","import React from \"react\";\n\nfunction ErrorPage() {\n  return (\n    <h1>Error Page</h1>\n  )\n}\n\nexport default ErrorPage","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n} from 'react-router-dom'\nimport Ep1 from './components/Ep1_Counters'\nimport ErrorPage from './components/ErrorPage'\n\nfunction PageList() {\n  const pageList = [\n    {\n      title: 'Ep1_Counter',\n      path: 'ep1'\n    }\n  ]\n  const linkList = pageList.map((page) => (\n    <Link to={page.path}>{page.title}</Link>\n  ))\n  return (\n    <div>\n      {linkList}\n    </div>\n  ) \n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Link to=\"/\">Home</Link>\n        <Routes>\n          <Route path=\"/\" element={<PageList />} />\n          <Route path=\"/ep1\" element={<Ep1 />} />\n          <Route path=\"*\" element={<ErrorPage />} />\n        </Routes>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}